
#ifndef BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_HPP_
#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_HPP_

// WARNING: FILE AUTOMATICALLY GENERATED, DO NOT MODIFY IT!
// Instead, modify and run related generation script "pp_assertions-generate.py".

#include "pp_1tuple_rem.hpp"
#include <boost/contract/ext_/preprocessor/traits/assertion.hpp>
#include <boost/contract/ext_/preprocessor/keyword/namespace.hpp>
#include <boost/contract/ext_/preprocessor/keyword/using.hpp>
#include <boost/contract/ext_/preprocessor/keyword/typedef.hpp>
#include <boost/contract/ext_/preprocessor/keyword/const.hpp>
#include <boost/contract/ext_/preprocessor/keyword/return.hpp>
#include <boost/contract/ext_/preprocessor/utility/empty.hpp>
#include <boost/preprocessor/seq/fold_left.hpp>
#include <boost/preprocessor/tuple/eat.hpp>
#include <boost/preprocessor/tuple/rem.hpp>
#include <boost/preprocessor/punctuation/comma_if.hpp>
#include <boost/preprocessor/control/iif.hpp>
#include <boost/preprocessor/control/expr_iif.hpp>
#include <boost/preprocessor/logical/compl.hpp>
#include <boost/preprocessor/facilities/expand.hpp>

/* PIBLIC */

// Maximum number of nested assertions that can be processed (before pp errors).
#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_LIMIT 64

/* PRIVATE */

#define BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_(s, captures, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_PUSH_BACK_( \
        captures, \
        ( \
            BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
                    BOOST_CONTRACT_EXT_PP_CAPTURE_TRAITS_TYPE(traits)) \
            BOOST_CONTRACT_EXT_PP_CAPTURE_TRAITS_NAME(traits) \
        ) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_PUSH_BACK_(captures, capture)     (         BOOST_PP_TUPLE_REM_CTOR(captures)         BOOST_PP_COMMA_IF(BOOST_PP_COMPL(                 BOOST_PP_EXPAND(BOOST_CONTRACT_EXT_PP_IS_EMPTY captures)))         BOOST_PP_TUPLE_REM_CTOR(capture)     )

/* PUBLIC (1) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_1( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_1_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_1_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_1( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_1_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_1_, assertion_traits)

/* PRIVATE (1) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_1_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_1_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_1_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_1_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_1_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_1_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_1_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_1_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_1_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_1_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_1_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_1_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_1_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_1_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_1_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_1_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_1_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_1_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_1_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_1_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_1_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_1_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_1_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_1_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_1_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_1_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_2)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_1_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_1_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_2)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_1_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_1_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_2)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_1_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_1_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_2)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_1_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_2_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_2_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_1_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_1_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_1_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_1_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (2) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_2( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_2_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_2_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_2( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_2_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_2_, assertion_traits)

/* PRIVATE (2) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_2_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_2_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_2_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_2_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_2_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_2_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_2_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_2_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_2_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_2_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_2_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_2_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_2_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_2_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_2_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_2_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_2_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_2_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_2_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_2_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_2_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_2_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_2_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_2_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_2_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_2_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_3)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_2_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_2_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_3)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_2_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_2_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_3)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_2_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_2_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_3)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_2_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_3_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_3_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_2_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_2_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_2_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_2_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (3) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_3( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_3_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_3_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_3( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_3_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_3_, assertion_traits)

/* PRIVATE (3) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_3_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_3_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_3_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_3_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_3_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_3_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_3_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_3_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_3_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_3_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_3_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_3_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_3_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_3_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_3_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_3_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_3_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_3_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_3_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_3_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_3_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_3_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_3_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_3_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_3_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_3_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_4)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_3_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_3_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_4)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_3_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_3_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_4)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_3_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_3_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_4)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_3_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_4_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_4_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_3_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_3_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_3_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_3_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (4) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_4( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_4_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_4_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_4( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_4_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_4_, assertion_traits)

/* PRIVATE (4) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_4_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_4_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_4_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_4_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_4_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_4_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_4_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_4_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_4_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_4_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_4_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_4_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_4_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_4_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_4_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_4_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_4_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_4_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_4_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_4_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_4_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_4_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_4_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_4_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_4_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_4_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_5)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_4_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_4_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_5)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_4_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_4_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_5)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_4_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_4_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_5)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_4_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_5_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_5_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_4_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_4_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_4_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_4_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (5) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_5( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_5_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_5_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_5( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_5_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_5_, assertion_traits)

/* PRIVATE (5) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_5_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_5_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_5_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_5_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_5_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_5_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_5_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_5_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_5_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_5_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_5_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_5_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_5_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_5_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_5_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_5_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_5_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_5_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_5_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_5_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_5_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_5_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_5_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_5_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_5_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_5_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_6)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_5_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_5_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_6)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_5_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_5_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_6)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_5_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_5_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_6)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_5_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_6_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_6_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_5_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_5_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_5_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_5_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (6) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_6( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_6_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_6_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_6( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_6_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_6_, assertion_traits)

/* PRIVATE (6) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_6_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_6_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_6_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_6_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_6_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_6_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_6_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_6_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_6_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_6_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_6_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_6_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_6_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_6_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_6_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_6_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_6_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_6_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_6_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_6_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_6_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_6_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_6_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_6_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_6_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_6_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_7)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_6_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_6_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_7)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_6_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_6_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_7)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_6_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_6_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_7)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_6_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_7_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_7_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_6_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_6_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_6_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_6_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (7) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_7( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_7_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_7_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_7( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_7_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_7_, assertion_traits)

/* PRIVATE (7) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_7_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_7_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_7_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_7_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_7_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_7_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_7_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_7_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_7_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_7_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_7_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_7_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_7_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_7_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_7_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_7_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_7_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_7_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_7_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_7_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_7_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_7_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_7_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_7_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_7_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_7_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_8)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_7_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_7_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_8)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_7_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_7_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_8)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_7_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_7_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_8)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_7_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_8_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_8_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_7_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_7_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_7_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_7_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (8) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_8( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_8_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_8_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_8( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_8_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_8_, assertion_traits)

/* PRIVATE (8) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_8_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_8_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_8_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_8_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_8_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_8_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_8_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_8_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_8_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_8_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_8_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_8_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_8_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_8_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_8_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_8_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_8_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_8_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_8_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_8_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_8_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_8_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_8_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_8_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_8_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_8_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_9)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_8_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_8_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_9)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_8_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_8_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_9)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_8_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_8_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_9)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_8_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_9_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_9_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_8_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_8_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_8_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_8_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (9) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_9( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_9_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_9_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_9( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_9_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_9_, assertion_traits)

/* PRIVATE (9) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_9_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_9_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_9_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_9_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_9_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_9_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_9_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_9_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_9_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_9_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_9_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_9_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_9_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_9_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_9_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_9_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_9_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_9_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_9_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_9_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_9_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_9_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_9_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_9_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_9_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_9_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_10)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_9_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_9_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_10)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_9_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_9_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_10)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_9_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_9_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_10)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_9_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_10_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_10_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_9_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_9_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_9_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_9_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (10) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_10( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_10_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_10_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_10( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_10_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_10_, assertion_traits)

/* PRIVATE (10) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_10_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_10_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_10_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_10_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_10_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_10_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_10_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_10_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_10_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_10_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_10_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_10_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_10_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_10_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_10_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_10_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_10_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_10_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_10_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_10_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_10_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_10_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_10_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_10_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_10_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_10_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_11)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_10_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_10_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_11)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_10_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_10_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_11)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_10_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_10_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_11)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_10_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_11_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_11_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_10_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_10_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_10_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_10_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (11) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_11( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_11_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_11_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_11( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_11_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_11_, assertion_traits)

/* PRIVATE (11) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_11_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_11_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_11_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_11_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_11_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_11_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_11_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_11_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_11_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_11_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_11_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_11_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_11_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_11_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_11_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_11_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_11_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_11_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_11_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_11_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_11_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_11_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_11_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_11_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_11_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_11_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_12)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_11_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_11_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_12)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_11_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_11_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_12)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_11_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_11_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_12)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_11_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_12_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_12_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_11_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_11_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_11_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_11_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (12) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_12( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_12_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_12_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_12( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_12_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_12_, assertion_traits)

/* PRIVATE (12) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_12_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_12_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_12_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_12_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_12_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_12_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_12_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_12_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_12_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_12_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_12_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_12_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_12_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_12_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_12_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_12_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_12_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_12_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_12_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_12_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_12_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_12_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_12_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_12_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_12_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_12_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_13)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_12_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_12_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_13)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_12_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_12_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_13)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_12_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_12_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_13)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_12_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_13_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_13_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_12_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_12_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_12_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_12_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (13) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_13( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_13_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_13_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_13( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_13_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_13_, assertion_traits)

/* PRIVATE (13) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_13_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_13_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_13_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_13_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_13_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_13_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_13_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_13_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_13_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_13_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_13_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_13_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_13_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_13_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_13_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_13_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_13_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_13_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_13_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_13_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_13_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_13_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_13_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_13_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_13_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_13_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_14)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_13_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_13_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_14)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_13_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_13_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_14)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_13_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_13_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_14)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_13_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_14_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_14_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_13_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_13_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_13_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_13_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (14) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_14( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_14_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_14_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_14( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_14_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_14_, assertion_traits)

/* PRIVATE (14) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_14_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_14_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_14_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_14_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_14_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_14_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_14_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_14_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_14_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_14_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_14_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_14_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_14_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_14_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_14_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_14_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_14_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_14_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_14_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_14_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_14_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_14_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_14_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_14_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_14_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_14_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_15)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_14_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_14_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_15)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_14_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_14_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_15)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_14_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_14_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_15)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_14_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_15_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_15_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_14_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_14_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_14_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_14_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (15) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_15( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_15_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_15_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_15( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_15_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_15_, assertion_traits)

/* PRIVATE (15) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_15_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_15_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_15_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_15_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_15_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_15_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_15_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_15_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_15_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_15_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_15_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_15_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_15_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_15_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_15_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_15_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_15_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_15_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_15_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_15_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_15_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_15_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_15_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_15_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_15_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_15_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_16)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_15_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_15_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_16)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_15_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_15_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_16)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_15_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_15_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_16)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_15_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_16_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_16_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_15_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_15_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_15_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_15_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (16) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_16( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_16_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_16_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_16( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_16_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_16_, assertion_traits)

/* PRIVATE (16) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_16_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_16_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_16_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_16_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_16_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_16_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_16_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_16_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_16_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_16_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_16_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_16_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_16_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_16_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_16_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_16_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_16_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_16_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_16_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_16_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_16_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_16_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_16_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_16_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_16_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_16_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_17)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_16_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_16_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_17)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_16_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_16_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_17)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_16_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_16_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_17)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_16_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_17_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_17_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_16_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_16_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_16_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_16_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (17) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_17( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_17_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_17_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_17( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_17_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_17_, assertion_traits)

/* PRIVATE (17) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_17_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_17_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_17_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_17_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_17_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_17_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_17_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_17_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_17_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_17_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_17_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_17_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_17_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_17_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_17_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_17_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_17_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_17_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_17_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_17_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_17_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_17_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_17_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_17_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_17_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_17_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_18)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_17_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_17_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_18)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_17_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_17_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_18)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_17_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_17_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_18)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_17_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_18_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_18_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_17_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_17_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_17_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_17_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (18) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_18( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_18_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_18_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_18( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_18_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_18_, assertion_traits)

/* PRIVATE (18) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_18_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_18_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_18_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_18_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_18_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_18_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_18_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_18_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_18_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_18_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_18_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_18_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_18_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_18_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_18_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_18_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_18_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_18_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_18_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_18_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_18_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_18_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_18_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_18_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_18_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_18_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_19)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_18_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_18_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_19)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_18_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_18_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_19)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_18_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_18_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_19)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_18_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_19_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_19_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_18_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_18_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_18_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_18_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (19) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_19( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_19_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_19_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_19( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_19_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_19_, assertion_traits)

/* PRIVATE (19) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_19_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_19_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_19_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_19_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_19_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_19_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_19_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_19_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_19_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_19_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_19_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_19_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_19_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_19_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_19_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_19_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_19_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_19_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_19_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_19_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_19_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_19_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_19_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_19_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_19_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_19_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_20)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_19_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_19_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_20)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_19_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_19_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_20)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_19_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_19_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_20)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_19_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_20_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_20_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_19_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_19_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_19_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_19_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (20) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_20( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_20_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_20_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_20( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_20_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_20_, assertion_traits)

/* PRIVATE (20) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_20_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_20_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_20_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_20_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_20_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_20_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_20_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_20_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_20_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_20_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_20_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_20_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_20_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_20_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_20_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_20_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_20_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_20_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_20_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_20_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_20_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_20_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_20_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_20_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_20_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_20_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_21)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_20_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_20_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_21)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_20_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_20_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_21)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_20_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_20_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_21)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_20_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_21_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_21_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_20_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_20_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_20_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_20_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (21) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_21( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_21_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_21_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_21( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_21_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_21_, assertion_traits)

/* PRIVATE (21) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_21_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_21_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_21_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_21_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_21_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_21_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_21_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_21_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_21_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_21_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_21_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_21_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_21_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_21_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_21_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_21_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_21_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_21_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_21_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_21_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_21_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_21_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_21_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_21_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_21_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_21_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_22)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_21_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_21_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_22)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_21_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_21_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_22)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_21_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_21_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_22)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_21_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_22_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_22_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_21_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_21_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_21_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_21_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (22) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_22( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_22_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_22_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_22( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_22_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_22_, assertion_traits)

/* PRIVATE (22) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_22_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_22_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_22_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_22_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_22_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_22_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_22_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_22_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_22_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_22_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_22_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_22_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_22_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_22_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_22_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_22_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_22_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_22_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_22_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_22_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_22_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_22_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_22_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_22_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_22_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_22_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_23)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_22_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_22_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_23)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_22_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_22_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_23)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_22_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_22_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_23)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_22_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_23_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_23_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_22_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_22_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_22_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_22_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (23) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_23( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_23_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_23_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_23( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_23_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_23_, assertion_traits)

/* PRIVATE (23) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_23_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_23_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_23_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_23_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_23_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_23_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_23_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_23_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_23_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_23_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_23_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_23_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_23_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_23_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_23_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_23_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_23_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_23_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_23_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_23_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_23_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_23_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_23_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_23_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_23_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_23_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_24)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_23_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_23_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_24)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_23_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_23_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_24)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_23_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_23_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_24)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_23_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_24_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_24_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_23_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_23_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_23_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_23_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (24) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_24( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_24_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_24_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_24( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_24_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_24_, assertion_traits)

/* PRIVATE (24) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_24_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_24_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_24_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_24_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_24_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_24_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_24_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_24_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_24_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_24_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_24_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_24_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_24_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_24_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_24_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_24_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_24_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_24_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_24_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_24_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_24_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_24_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_24_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_24_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_24_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_24_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_25)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_24_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_24_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_25)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_24_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_24_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_25)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_24_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_24_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_25)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_24_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_25_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_25_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_24_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_24_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_24_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_24_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (25) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_25( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_25_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_25_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_25( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_25_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_25_, assertion_traits)

/* PRIVATE (25) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_25_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_25_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_25_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_25_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_25_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_25_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_25_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_25_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_25_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_25_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_25_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_25_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_25_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_25_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_25_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_25_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_25_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_25_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_25_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_25_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_25_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_25_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_25_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_25_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_25_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_25_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_26)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_25_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_25_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_26)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_25_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_25_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_26)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_25_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_25_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_26)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_25_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_26_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_26_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_25_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_25_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_25_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_25_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (26) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_26( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_26_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_26_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_26( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_26_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_26_, assertion_traits)

/* PRIVATE (26) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_26_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_26_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_26_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_26_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_26_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_26_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_26_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_26_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_26_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_26_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_26_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_26_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_26_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_26_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_26_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_26_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_26_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_26_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_26_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_26_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_26_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_26_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_26_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_26_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_26_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_26_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_27)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_26_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_26_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_27)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_26_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_26_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_27)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_26_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_26_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_27)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_26_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_27_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_27_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_26_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_26_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_26_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_26_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (27) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_27( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_27_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_27_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_27( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_27_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_27_, assertion_traits)

/* PRIVATE (27) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_27_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_27_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_27_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_27_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_27_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_27_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_27_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_27_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_27_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_27_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_27_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_27_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_27_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_27_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_27_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_27_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_27_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_27_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_27_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_27_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_27_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_27_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_27_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_27_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_27_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_27_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_28)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_27_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_27_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_28)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_27_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_27_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_28)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_27_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_27_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_28)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_27_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_28_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_28_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_27_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_27_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_27_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_27_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (28) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_28( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_28_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_28_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_28( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_28_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_28_, assertion_traits)

/* PRIVATE (28) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_28_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_28_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_28_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_28_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_28_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_28_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_28_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_28_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_28_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_28_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_28_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_28_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_28_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_28_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_28_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_28_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_28_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_28_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_28_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_28_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_28_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_28_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_28_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_28_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_28_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_28_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_29)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_28_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_28_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_29)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_28_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_28_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_29)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_28_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_28_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_29)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_28_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_29_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_29_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_28_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_28_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_28_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_28_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (29) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_29( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_29_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_29_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_29( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_29_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_29_, assertion_traits)

/* PRIVATE (29) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_29_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_29_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_29_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_29_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_29_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_29_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_29_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_29_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_29_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_29_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_29_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_29_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_29_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_29_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_29_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_29_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_29_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_29_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_29_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_29_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_29_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_29_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_29_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_29_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_29_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_29_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_30)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_29_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_29_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_30)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_29_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_29_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_30)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_29_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_29_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_30)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_29_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_30_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_30_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_29_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_29_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_29_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_29_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (30) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_30( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_30_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_30_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_30( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_30_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_30_, assertion_traits)

/* PRIVATE (30) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_30_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_30_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_30_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_30_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_30_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_30_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_30_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_30_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_30_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_30_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_30_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_30_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_30_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_30_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_30_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_30_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_30_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_30_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_30_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_30_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_30_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_30_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_30_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_30_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_30_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_30_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_31)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_30_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_30_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_31)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_30_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_30_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_31)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_30_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_30_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_31)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_30_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_31_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_31_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_30_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_30_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_30_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_30_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (31) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_31( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_31_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_31_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_31( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_31_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_31_, assertion_traits)

/* PRIVATE (31) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_31_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_31_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_31_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_31_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_31_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_31_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_31_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_31_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_31_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_31_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_31_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_31_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_31_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_31_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_31_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_31_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_31_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_31_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_31_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_31_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_31_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_31_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_31_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_31_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_31_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_31_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_32)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_31_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_31_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_32)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_31_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_31_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_32)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_31_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_31_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_32)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_31_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_32_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_32_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_31_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_31_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_31_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_31_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (32) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_32( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_32_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_32_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_32( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_32_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_32_, assertion_traits)

/* PRIVATE (32) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_32_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_32_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_32_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_32_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_32_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_32_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_32_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_32_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_32_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_32_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_32_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_32_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_32_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_32_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_32_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_32_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_32_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_32_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_32_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_32_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_32_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_32_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_32_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_32_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_32_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_32_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_33)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_32_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_32_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_33)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_32_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_32_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_33)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_32_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_32_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_33)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_32_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_33_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_33_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_32_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_32_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_32_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_32_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (33) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_33( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_33_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_33_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_33( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_33_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_33_, assertion_traits)

/* PRIVATE (33) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_33_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_33_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_33_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_33_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_33_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_33_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_33_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_33_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_33_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_33_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_33_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_33_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_33_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_33_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_33_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_33_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_33_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_33_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_33_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_33_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_33_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_33_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_33_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_33_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_33_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_33_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_34)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_33_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_33_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_34)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_33_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_33_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_34)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_33_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_33_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_34)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_33_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_34_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_34_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_33_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_33_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_33_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_33_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (34) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_34( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_34_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_34_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_34( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_34_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_34_, assertion_traits)

/* PRIVATE (34) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_34_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_34_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_34_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_34_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_34_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_34_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_34_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_34_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_34_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_34_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_34_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_34_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_34_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_34_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_34_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_34_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_34_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_34_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_34_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_34_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_34_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_34_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_34_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_34_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_34_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_34_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_35)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_34_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_34_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_35)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_34_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_34_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_35)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_34_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_34_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_35)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_34_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_35_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_35_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_34_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_34_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_34_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_34_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (35) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_35( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_35_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_35_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_35( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_35_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_35_, assertion_traits)

/* PRIVATE (35) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_35_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_35_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_35_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_35_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_35_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_35_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_35_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_35_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_35_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_35_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_35_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_35_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_35_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_35_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_35_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_35_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_35_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_35_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_35_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_35_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_35_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_35_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_35_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_35_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_35_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_35_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_36)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_35_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_35_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_36)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_35_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_35_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_36)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_35_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_35_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_36)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_35_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_36_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_36_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_35_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_35_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_35_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_35_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (36) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_36( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_36_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_36_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_36( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_36_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_36_, assertion_traits)

/* PRIVATE (36) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_36_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_36_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_36_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_36_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_36_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_36_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_36_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_36_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_36_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_36_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_36_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_36_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_36_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_36_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_36_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_36_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_36_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_36_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_36_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_36_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_36_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_36_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_36_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_36_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_36_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_36_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_37)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_36_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_36_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_37)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_36_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_36_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_37)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_36_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_36_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_37)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_36_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_37_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_37_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_36_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_36_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_36_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_36_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (37) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_37( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_37_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_37_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_37( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_37_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_37_, assertion_traits)

/* PRIVATE (37) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_37_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_37_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_37_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_37_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_37_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_37_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_37_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_37_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_37_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_37_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_37_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_37_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_37_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_37_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_37_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_37_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_37_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_37_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_37_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_37_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_37_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_37_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_37_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_37_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_37_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_37_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_38)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_37_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_37_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_38)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_37_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_37_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_38)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_37_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_37_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_38)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_37_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_38_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_38_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_37_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_37_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_37_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_37_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (38) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_38( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_38_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_38_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_38( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_38_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_38_, assertion_traits)

/* PRIVATE (38) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_38_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_38_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_38_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_38_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_38_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_38_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_38_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_38_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_38_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_38_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_38_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_38_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_38_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_38_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_38_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_38_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_38_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_38_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_38_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_38_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_38_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_38_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_38_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_38_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_38_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_38_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_39)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_38_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_38_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_39)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_38_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_38_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_39)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_38_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_38_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_39)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_38_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_39_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_39_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_38_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_38_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_38_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_38_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (39) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_39( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_39_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_39_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_39( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_39_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_39_, assertion_traits)

/* PRIVATE (39) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_39_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_39_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_39_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_39_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_39_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_39_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_39_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_39_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_39_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_39_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_39_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_39_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_39_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_39_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_39_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_39_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_39_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_39_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_39_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_39_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_39_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_39_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_39_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_39_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_39_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_39_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_40)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_39_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_39_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_40)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_39_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_39_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_40)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_39_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_39_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_40)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_39_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_40_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_40_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_39_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_39_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_39_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_39_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (40) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_40( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_40_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_40_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_40( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_40_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_40_, assertion_traits)

/* PRIVATE (40) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_40_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_40_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_40_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_40_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_40_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_40_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_40_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_40_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_40_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_40_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_40_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_40_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_40_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_40_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_40_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_40_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_40_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_40_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_40_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_40_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_40_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_40_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_40_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_40_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_40_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_40_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_41)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_40_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_40_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_41)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_40_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_40_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_41)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_40_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_40_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_41)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_40_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_41_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_41_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_40_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_40_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_40_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_40_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (41) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_41( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_41_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_41_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_41( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_41_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_41_, assertion_traits)

/* PRIVATE (41) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_41_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_41_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_41_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_41_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_41_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_41_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_41_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_41_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_41_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_41_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_41_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_41_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_41_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_41_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_41_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_41_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_41_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_41_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_41_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_41_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_41_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_41_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_41_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_41_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_41_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_41_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_42)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_41_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_41_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_42)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_41_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_41_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_42)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_41_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_41_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_42)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_41_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_42_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_42_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_41_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_41_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_41_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_41_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (42) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_42( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_42_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_42_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_42( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_42_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_42_, assertion_traits)

/* PRIVATE (42) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_42_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_42_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_42_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_42_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_42_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_42_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_42_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_42_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_42_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_42_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_42_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_42_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_42_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_42_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_42_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_42_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_42_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_42_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_42_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_42_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_42_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_42_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_42_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_42_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_42_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_42_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_43)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_42_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_42_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_43)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_42_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_42_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_43)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_42_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_42_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_43)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_42_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_43_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_43_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_42_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_42_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_42_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_42_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (43) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_43( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_43_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_43_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_43( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_43_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_43_, assertion_traits)

/* PRIVATE (43) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_43_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_43_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_43_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_43_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_43_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_43_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_43_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_43_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_43_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_43_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_43_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_43_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_43_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_43_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_43_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_43_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_43_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_43_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_43_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_43_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_43_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_43_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_43_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_43_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_43_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_43_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_44)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_43_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_43_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_44)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_43_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_43_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_44)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_43_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_43_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_44)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_43_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_44_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_44_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_43_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_43_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_43_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_43_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (44) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_44( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_44_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_44_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_44( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_44_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_44_, assertion_traits)

/* PRIVATE (44) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_44_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_44_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_44_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_44_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_44_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_44_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_44_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_44_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_44_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_44_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_44_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_44_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_44_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_44_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_44_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_44_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_44_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_44_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_44_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_44_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_44_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_44_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_44_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_44_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_44_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_44_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_45)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_44_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_44_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_45)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_44_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_44_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_45)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_44_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_44_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_45)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_44_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_45_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_45_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_44_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_44_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_44_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_44_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (45) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_45( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_45_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_45_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_45( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_45_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_45_, assertion_traits)

/* PRIVATE (45) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_45_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_45_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_45_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_45_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_45_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_45_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_45_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_45_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_45_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_45_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_45_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_45_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_45_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_45_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_45_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_45_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_45_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_45_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_45_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_45_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_45_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_45_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_45_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_45_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_45_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_45_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_46)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_45_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_45_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_46)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_45_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_45_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_46)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_45_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_45_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_46)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_45_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_46_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_46_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_45_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_45_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_45_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_45_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (46) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_46( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_46_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_46_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_46( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_46_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_46_, assertion_traits)

/* PRIVATE (46) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_46_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_46_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_46_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_46_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_46_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_46_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_46_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_46_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_46_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_46_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_46_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_46_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_46_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_46_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_46_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_46_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_46_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_46_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_46_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_46_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_46_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_46_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_46_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_46_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_46_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_46_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_47)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_46_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_46_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_47)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_46_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_46_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_47)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_46_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_46_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_47)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_46_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_47_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_47_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_46_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_46_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_46_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_46_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (47) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_47( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_47_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_47_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_47( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_47_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_47_, assertion_traits)

/* PRIVATE (47) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_47_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_47_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_47_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_47_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_47_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_47_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_47_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_47_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_47_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_47_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_47_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_47_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_47_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_47_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_47_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_47_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_47_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_47_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_47_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_47_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_47_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_47_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_47_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_47_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_47_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_47_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_48)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_47_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_47_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_48)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_47_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_47_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_48)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_47_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_47_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_48)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_47_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_48_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_48_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_47_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_47_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_47_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_47_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (48) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_48( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_48_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_48_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_48( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_48_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_48_, assertion_traits)

/* PRIVATE (48) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_48_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_48_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_48_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_48_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_48_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_48_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_48_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_48_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_48_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_48_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_48_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_48_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_48_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_48_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_48_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_48_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_48_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_48_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_48_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_48_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_48_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_48_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_48_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_48_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_48_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_48_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_49)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_48_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_48_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_49)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_48_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_48_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_49)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_48_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_48_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_49)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_48_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_49_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_49_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_48_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_48_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_48_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_48_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (49) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_49( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_49_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_49_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_49( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_49_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_49_, assertion_traits)

/* PRIVATE (49) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_49_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_49_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_49_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_49_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_49_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_49_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_49_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_49_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_49_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_49_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_49_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_49_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_49_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_49_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_49_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_49_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_49_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_49_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_49_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_49_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_49_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_49_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_49_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_49_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_49_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_49_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_50)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_49_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_49_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_50)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_49_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_49_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_50)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_49_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_49_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_50)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_49_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_50_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_50_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_49_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_49_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_49_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_49_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (50) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_50( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_50_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_50_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_50( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_50_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_50_, assertion_traits)

/* PRIVATE (50) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_50_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_50_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_50_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_50_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_50_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_50_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_50_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_50_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_50_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_50_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_50_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_50_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_50_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_50_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_50_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_50_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_50_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_50_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_50_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_50_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_50_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_50_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_50_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_50_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_50_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_50_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_51)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_50_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_50_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_51)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_50_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_50_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_51)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_50_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_50_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_51)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_50_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_51_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_51_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_50_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_50_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_50_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_50_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (51) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_51( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_51_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_51_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_51( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_51_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_51_, assertion_traits)

/* PRIVATE (51) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_51_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_51_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_51_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_51_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_51_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_51_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_51_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_51_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_51_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_51_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_51_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_51_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_51_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_51_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_51_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_51_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_51_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_51_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_51_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_51_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_51_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_51_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_51_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_51_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_51_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_51_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_52)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_51_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_51_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_52)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_51_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_51_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_52)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_51_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_51_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_52)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_51_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_52_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_52_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_51_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_51_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_51_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_51_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (52) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_52( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_52_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_52_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_52( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_52_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_52_, assertion_traits)

/* PRIVATE (52) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_52_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_52_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_52_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_52_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_52_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_52_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_52_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_52_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_52_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_52_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_52_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_52_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_52_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_52_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_52_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_52_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_52_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_52_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_52_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_52_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_52_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_52_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_52_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_52_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_52_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_52_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_53)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_52_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_52_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_53)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_52_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_52_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_53)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_52_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_52_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_53)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_52_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_53_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_53_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_52_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_52_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_52_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_52_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (53) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_53( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_53_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_53_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_53( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_53_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_53_, assertion_traits)

/* PRIVATE (53) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_53_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_53_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_53_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_53_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_53_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_53_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_53_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_53_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_53_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_53_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_53_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_53_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_53_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_53_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_53_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_53_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_53_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_53_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_53_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_53_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_53_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_53_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_53_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_53_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_53_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_53_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_54)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_53_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_53_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_54)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_53_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_53_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_54)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_53_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_53_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_54)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_53_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_54_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_54_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_53_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_53_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_53_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_53_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (54) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_54( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_54_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_54_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_54( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_54_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_54_, assertion_traits)

/* PRIVATE (54) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_54_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_54_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_54_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_54_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_54_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_54_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_54_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_54_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_54_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_54_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_54_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_54_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_54_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_54_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_54_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_54_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_54_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_54_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_54_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_54_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_54_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_54_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_54_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_54_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_54_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_54_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_55)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_54_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_54_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_55)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_54_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_54_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_55)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_54_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_54_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_55)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_54_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_55_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_55_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_54_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_54_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_54_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_54_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (55) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_55( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_55_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_55_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_55( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_55_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_55_, assertion_traits)

/* PRIVATE (55) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_55_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_55_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_55_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_55_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_55_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_55_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_55_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_55_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_55_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_55_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_55_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_55_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_55_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_55_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_55_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_55_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_55_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_55_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_55_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_55_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_55_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_55_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_55_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_55_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_55_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_55_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_56)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_55_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_55_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_56)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_55_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_55_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_56)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_55_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_55_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_56)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_55_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_56_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_56_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_55_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_55_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_55_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_55_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (56) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_56( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_56_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_56_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_56( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_56_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_56_, assertion_traits)

/* PRIVATE (56) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_56_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_56_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_56_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_56_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_56_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_56_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_56_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_56_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_56_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_56_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_56_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_56_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_56_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_56_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_56_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_56_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_56_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_56_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_56_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_56_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_56_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_56_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_56_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_56_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_56_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_56_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_57)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_56_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_56_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_57)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_56_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_56_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_57)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_56_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_56_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_57)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_56_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_57_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_57_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_56_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_56_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_56_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_56_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (57) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_57( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_57_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_57_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_57( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_57_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_57_, assertion_traits)

/* PRIVATE (57) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_57_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_57_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_57_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_57_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_57_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_57_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_57_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_57_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_57_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_57_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_57_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_57_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_57_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_57_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_57_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_57_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_57_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_57_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_57_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_57_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_57_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_57_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_57_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_57_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_57_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_57_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_58)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_57_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_57_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_58)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_57_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_57_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_58)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_57_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_57_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_58)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_57_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_58_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_58_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_57_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_57_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_57_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_57_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (58) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_58( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_58_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_58_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_58( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_58_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_58_, assertion_traits)

/* PRIVATE (58) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_58_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_58_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_58_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_58_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_58_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_58_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_58_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_58_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_58_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_58_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_58_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_58_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_58_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_58_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_58_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_58_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_58_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_58_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_58_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_58_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_58_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_58_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_58_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_58_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_58_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_58_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_59)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_58_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_58_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_59)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_58_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_58_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_59)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_58_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_58_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_59)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_58_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_59_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_59_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_58_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_58_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_58_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_58_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (59) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_59( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_59_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_59_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_59( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_59_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_59_, assertion_traits)

/* PRIVATE (59) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_59_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_59_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_59_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_59_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_59_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_59_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_59_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_59_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_59_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_59_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_59_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_59_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_59_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_59_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_59_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_59_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_59_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_59_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_59_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_59_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_59_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_59_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_59_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_59_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_59_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_59_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_60)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_59_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_59_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_60)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_59_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_59_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_60)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_59_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_59_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_60)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_59_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_60_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_60_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_59_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_59_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_59_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_59_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (60) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_60( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_60_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_60_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_60( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_60_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_60_, assertion_traits)

/* PRIVATE (60) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_60_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_60_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_60_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_60_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_60_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_60_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_60_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_60_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_60_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_60_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_60_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_60_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_60_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_60_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_60_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_60_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_60_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_60_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_60_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_60_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_60_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_60_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_60_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_60_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_60_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_60_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_61)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_60_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_60_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_61)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_60_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_60_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_61)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_60_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_60_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_61)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_60_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_61_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_61_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_60_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_60_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_60_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_60_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (61) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_61( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_61_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_61_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_61( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_61_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_61_, assertion_traits)

/* PRIVATE (61) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_61_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_61_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_61_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_61_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_61_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_61_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_61_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_61_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_61_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_61_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_61_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_61_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_61_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_61_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_61_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_61_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_61_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_61_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_61_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_61_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_61_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_61_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_61_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_61_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_61_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_61_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_62)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_61_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_61_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_62)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_61_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_61_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_62)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_61_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_61_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_62)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_61_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_62_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_62_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_61_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_61_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_61_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_61_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (62) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_62( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_62_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_62_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_62( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_62_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_62_, assertion_traits)

/* PRIVATE (62) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_62_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_62_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_62_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_62_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_62_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_62_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_62_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_62_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_62_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_62_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_62_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_62_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_62_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_62_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_62_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_62_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_62_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_62_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_62_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_62_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_62_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_62_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_62_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_62_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_62_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_62_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_63)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_62_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_62_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_63)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_62_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_62_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_63)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_62_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_62_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_63)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_62_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_63_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_63_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_62_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_62_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_62_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_62_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (63) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_63( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_63_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_63_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_63( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_63_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_63_, assertion_traits)

/* PRIVATE (63) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_63_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_63_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_63_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_63_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_63_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_63_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_63_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_63_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_63_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_63_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_63_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_63_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_63_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_63_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_63_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_63_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_63_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_63_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_63_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_63_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_63_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_63_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_63_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_63_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_63_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_63_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_64)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_63_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_63_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_64)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_63_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_63_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_64)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_63_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_63_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_64)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_63_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_64_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_64_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_63_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_63_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_63_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_63_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

/* PUBLIC (64) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_64( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_64_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_64_, assertion_traits)
    
#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_64( \
        s, assertions, assertion_traits) \
    BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_64_(s, assertions, \
        BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_64_, assertion_traits)

/* PRIVATE (64) */

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_64_( \
        s, assertions, assertion_macro, assertion_traits) \
    ( \
        BOOST_PP_TUPLE_REM_CTOR(assertions) \
        assertion_macro(s, assertion_traits) \
    )

#define BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_64_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_NAMESPACE_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_64_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_USING_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_64_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_TYPEDEF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_64_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_64_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_64_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_64_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_64_ \
    ))))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTION_S_64_(s, traits) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_RETURN_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_64_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_64_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_KEYWORD_IS_IF_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_64_ \
    , BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_STATIC_IF_ASSERTION_TRAITS_IS( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND(traits)), \
        BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_64_ \
    , \
        BOOST_CONTRACT_TEST_AUX_PP_ASSERTION_S_64_ \
    ))))(s, traits)

#define BOOST_CONTRACT_TEST_AUX_PP_NAMESPACE_ASSERTION_S_64_(s, traits) \
    namespace \
    (BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NEW_NAME(traits)) \
    as BOOST_CONTRACT_EXT_PP_NAMESPACE_ASSERTION_TRAITS_NAME(traits) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_USING_ASSERTION_S_64_(s, traits) \
    BOOST_PP_EXPR_IIF( \
        BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS( \
                traits \
            ) \
        )) \
    , \
        template \
    ) \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_TEMPLATE_PARAMS(traits) \
    using \
    BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAMESPACE(traits) \
    BOOST_PP_EXPR_IIF(BOOST_PP_COMPL(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits))), \
        (BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NEW_NAME(traits)) as \
    ) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_USING_ASSERTION_TRAITS_NAME(traits)) \
    ,

#define BOOST_CONTRACT_TEST_AUX_PP_TYPEDEF_ASSERTION_S_64_(s, traits) \
    typedef \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NAME(traits)) \
    BOOST_CONTRACT_EXT_PP_TYPEDEF_ASSERTION_TRAITS_NEW_NAME(traits) \
    ,
        
#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_S_64_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_64_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_64_(s, traits, \
        has_trailing_comma) \
    const \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)), \
        () BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(BOOST_CONTRACT_TEST_AUX_PP_CAPTURE_S_, (), \
            BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_CAPTURES(traits)) \
    BOOST_CONTRACT_EXT_PP_CONST_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_S_64_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_64_(s, traits, 1)

#define BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_64_(s, traits, \
        has_trailing_comma) \
    BOOST_CONTRACT_EXT_PP_BOOL_ASSERTION_TRAITS_EXPR(traits) \
    BOOST_PP_COMMA_IF(has_trailing_comma)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_S_64_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_64_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_65)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_IF_ASSERTION_S_64_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_64_(s, traits, 0, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_65)

#define BOOST_CONTRACT_TEST_AUX_PP_STATIC_IF_ASSERTION_S_64_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_64_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_ASSERTIONS_S_65)

#define BOOST_CONTRACT_TEST_AUX_PP_POST_STATIC_IF_ASSERTION_S_64_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_64_(s, traits, 1, \
            BOOST_CONTRACT_TEST_AUX_PP_POST_ASSERTIONS_S_65)

#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_IMPL_S_64_(s, traits, \
        is_static, next_assertion_macro) \
    BOOST_PP_EXPR_IIF(is_static, static) \
    if( \
        BOOST_PP_IIF( \
            BOOST_CONTRACT_EXT_PP_KEYWORD_IS_CONST_FRONT( \
            BOOST_CONTRACT_EXT_PP_ASSERTION_TRAITS_KIND( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND( \
                traits \
            ))) \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_CONST_ASSERTION_IMPL_S_65_ \
        , \
            BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_65_ \
        )(s, BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_COND(traits), 0) \
    ) \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_THENS(traits)) \
    else \
    BOOST_PP_IIF(BOOST_CONTRACT_EXT_PP_IS_EMPTY( \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits)), \
        ( ) BOOST_PP_TUPLE_EAT(3) \
    , \
        BOOST_PP_SEQ_FOLD_LEFT_ ## s \
    )(next_assertion_macro, (), \
            BOOST_CONTRACT_EXT_PP_IF_ASSERTION_TRAITS_ELSES(traits))

// Extra parenthesis always internally added for if bool cond (so remove them).
#define BOOST_CONTRACT_TEST_AUX_PP_IF_ASSERTION_BOOL_COND_S_64_(s, \
        cond_traits, has_trailing_comma) \
    BOOST_PP_TUPLE_REM_CTOR(         BOOST_CONTRACT_TEST_AUX_PP_BOOL_ASSERTION_IMPL_S_64_( \
                s, cond_traits, has_trailing_comma)     )

#define BOOST_CONTRACT_TEST_AUX_PP_RETURN_ASSERTION_S_64_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_RETURN_ASSERTION_TRAITS_ASSIGN(traits) \
    return \
    ,

// Implementation: OLDOF_..._OPERATOR internally splits tokens into a 2-tuple.
#define BOOST_CONTRACT_TEST_AUX_PP_OLDOF_ASSERTION_S_64_(s, traits) \
    BOOST_CONTRACT_TEST_AUX_PP_1TUPLE_REM( \
            BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_TYPE(traits)) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_ASSIGN(traits) \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_OPERATOR \
    BOOST_CONTRACT_EXT_PP_OLDOF_ASSERTION_TRAITS_EXPR(traits) \
    ,

#endif // #include guard
