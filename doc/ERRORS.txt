
List of errors (as generated by GCC 4.2.4) and their common causes.

error: ‘mem’ is not a template
    Make sure class_type is specified to be a template.
        MACRO API: (template)(class_type)
        CODE API: dbc::fun<>::mem::template class_type

error: invalid use of non-static data member ‘...’
    Did you forget to use self?
    
error: no match for ‘...’ in ‘...’
    Did you forget .now/.old postfix in postconditions? You must use these 
    postfix in precondition for self as well as all function argument names
    (but not for 'result')
    
error: ‘...’ has no member named ‘old’
    Are you using old on either the class or on of the member function
    arguments without qualifing it with DBC_COPYABLE() (or dbc::copyable<>)
    first in the contract signature?

error: macro "DBC_..." passed ... arguments, but takes just ...
    Does one or more passed macro parameter contain a comma "," not wrapped in
    parenthesis "()"? If so, wrap this macro parameter with DBC_MPARAM(). (This
    is the case for templates with more than 1 argument and for code blocks
    containing "," when they are passed as macro parameters.)

warning: ‘class dbc::fun<...>...’ is already a friend of ‘...’
    Ignore this. This is due to macro APIs automatically specifying same
    contract type as friend more than one time when you use DBC_MEM_FUN()
    multiple times for different member functions. It would be nice if your
    compiler could be configured to not generate just this one warning. This is
    the ONLY warning that the DBC++ library generates.

error: ‘dbc_invariant_’ was not declared in this scope
    Did you forget to add DBC_INVARIANT(...) at the end of the class?

Compile-time errors resulting from DBC static assertions (checks).

error: ...DBC_ERROR_class_must_privately_inherit_from_dbc_object_...
    Did you forget to inherit (privately) from dbc::object<>? (Use
    DBC_INHERIT_OBJECT() or DBC_TRAILING_OBJECT() macros.)
    
error: ...DBC_ERROR_missing_function_arguments_...
    Did you forget to specify the function arguments when using the macro APIs?
    Use "()" for no argument -- e.g., DBC_MEM_FUN(... (fun-name)() ...).

